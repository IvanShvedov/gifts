@import url("https://fonts.googleapis.com/css?family=Lato:900");

/* star variables */
$stars: 7;
$distance: 360deg / $stars;
$star_orbit: 200px;

html,
body {
	height: 100%;
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
	justify-content: center;
	background: black;
	color: white;
	z-index: -1;
	line-height: 1.618;
	-moz-osx-font-smoothing: grayscale;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	font-family: "Lato", sans-serif;
}

#app {
	animation: run 4s infinite alternate linear;
	position: relative;
}

@keyframes run {
	0% {
		transform: rotateZ(-4deg) scale(0.9);
	}
	100% {
		transform: rotateZ(-3deg);
	}
}

/* Line Pattern */
#app h1 {
	background: repeating-linear-gradient(
		-40deg,
		black 0,
		black 0.02em,
		white 0.03em,
		white 0.05em
	);
	background-clip: text;
	-webkit-background-clip: text;
	color: transparent;
	width: $star_orbit + 100px;
	font-size: 60pt;
	position: relative;
	letter-spacing: 0.108em;
	line-height: 1em;
	text-align: center;
	margin:0;
	top: 20px;
}

/* Black stroke, white 3d */
#app h1:after {
	top: 2px;
	left: -10px;
	position: absolute;
	z-index: -1;
	content: "Не болей, Даша!";
	text-shadow: #000 1px 1px 0, #000 -1px 1px 0, #000 -1px -1px 0, #000 1px -1px 0,
		white 2px 2px 0, white 3px 3px 0, white 4px 4px 0, white 5px 5px 0,
		white 6px 6px 0, white 7px 7px 0, white 8px 8px 0, white 9px 9px 0,
		white 10px 10px 0, white 11px 11px 0, white 12px 12px 0;
}

/* stars */
.star {
	position: absolute;
	top: 50%;
	left: 50%;
	&:after {
		position: absolute;
		content: "\2605";
		font-size: 4em;
	}
	@for $i from 0 through $stars {
		$i : $i + 1;
		&:nth-child(#{$i}) {
			transform-origin: -$star_orbit 0;
			transform: translateX($star_orbit) rotate($distance * $i);
			animation: circle-#{$i} 9s infinite linear;
			&:after {
				transform: rotate(-90deg * $i);
				animation: reverse-spin-#{$i} 9s infinite alternate ease-in-out;
			}
		}
	}
}

@for $i from 0 through $stars {
	$i : $i + 1;
	@keyframes circle-#{$i} {
		to {
			transform: translateX($star_orbit) rotate($distance * $i + 360deg);
		}
	}
	@keyframes reverse-spin-#{$i} {
		to {
			transform: rotate(90deg * $i - 360deg);
		}
	}
}
